apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 28
    defaultConfig {
        applicationId "com.iventurebd.mymvvm"
        minSdkVersion 19
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        staging {
            initWith debug

            // Specifies a sorted list of fallback build types that the
            // plugin should try to use when a dependency does not include a
            // "staging" build type.
            // Used with :test-shared, which doesn't have a staging variant.
            matchingFallbacks = ['debug']
        }
    }

    dataBinding {
        enabled = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // UI
    implementation "androidx.appcompat:appcompat:$rootProject.appcompatVersion"
    implementation "androidx.browser:browser:$rootProject.browserVersion"
    implementation "androidx.constraintlayout:constraintlayout:$rootProject.constraintLayoutVersion"
    implementation "com.google.android.material:material:$rootProject.materialVersion"
    implementation "com.google.android:flexbox:$rootProject.flexboxVersion"
    implementation "com.airbnb.android:lottie:$rootProject.lottieVersion"
    implementation "com.pacioianu.david:ink-page-indicator:$rootProject.pageIndicatorVersion"

    // Architecture Components
    kapt "androidx.lifecycle:lifecycle-compiler:$rootProject.lifecycleVersion"
    testImplementation "androidx.arch.core:core-testing:$rootProject.lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-extensions:$rootProject.lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-livedata:$rootProject.lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-viewmodel:$rootProject.lifecycleVersion"

    // Dagger
    implementation "com.google.dagger:dagger-android:$rootProject.dagger"
    implementation "com.google.dagger:dagger-android-support:$rootProject.dagger"
    kapt "com.google.dagger:dagger-compiler:$rootProject.dagger"
    kapt "com.google.dagger:dagger-android-processor:$rootProject.dagger"

    // Glide
    implementation "com.github.bumptech.glide:glide:$rootProject.glideVersion"
    annotationProcessor "com.github.bumptech.glide:compiler:$rootProject.glideVersion"

    // Fabric and Firebase

    // Utils
    api "com.jakewharton.timber:timber:$rootProject.timberVersion"
    implementation "com.google.code.gson:gson:$rootProject.gsonVersion"
    implementation "androidx.core:core-ktx:$rootProject.ktxVersion"

    // Date and time API for Java.
    api "com.jakewharton.threetenabp:threetenabp:$rootProject.threetenabpVersion"
    testImplementation "org.threeten:threetenbp:$rootProject.threetenbpVersion"

    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$rootProject.kotlinVersion"

    // Instrumentation tests
    androidTestImplementation "androidx.test.espresso:espresso-core:$rootProject.espressoVersion"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:$rootProject.espressoVersion"
    androidTestImplementation "androidx.test:runner:$rootProject.runnerVersion"
    androidTestImplementation "androidx.test:rules:$rootProject.rulesVersion"

    // Local unit tests
    testImplementation "junit:junit:$rootProject.junitVersion"
    testImplementation "org.mockito:mockito-core:$rootProject.mockitoVersion"
    testImplementation "com.nhaarman:mockito-kotlin:$rootProject.mockitoKotlinVersion"
    testImplementation "org.hamcrest:hamcrest-library:$rootProject.hamcrestVersion"

    /*// Leak Canary
    debugImplementation "com.squareup.leakcanary:leakcanary-android:$rootProject.$leakCanaryVersion"
    stagingImplementation "com.squareup.leakcanary:leakcanary-android-no-op:$rootProject.$leakCanaryVersion"
    releaseImplementation "com.squareup.leakcanary:leakcanary-android-no-op:$rootProject.$leakCanaryVersion"
     */

    /* Retrofit using RxJava2, Okhttp, Okhttp logging interceptor, Gson  */
    implementation 'com.squareup.retrofit2:retrofit:2.5.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.5.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.4.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.14.1'

    /* RxAndroid  */
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'


    // unit tests livedata
    testImplementation "androidx.arch.core:core-testing:$rootProject.lifecycleVersion"
    implementation 'androidx.room:room-runtime:2.0.0'
    annotationProcessor 'androidx.room:room-compiler:2.0.0'
}

